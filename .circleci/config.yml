version: 2.1

jobs:
  build:
    docker:
      - image: google/cloud-sdk:alpine
    working_directory: ~/gke
    steps:
      - add_ssh_keys:
          fingerprints:
            - $CTX_SSH_DEPLOY_FINGERPRINT
      - run:
          name: Store Service Accounts
          command: |
            echo $CTX_GOOGLE_DEPLOY_SERVICE_JSON > ${HOME}/gcloud-service-key.json
            chmod 600 $HOME/gcloud-service-key.json

      - run:
          name: Setup compute instance
          command: |
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${CTX_GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${CTX_GOOGLE_COMPUTE_ZONE}

            gcloud compute instances create weechat-$CIRCLE_BUILD_NUM \
              --image-family=coreos-stable --image-project=coreos-cloud \
              --machine-type=f1-micro --boot-disk-size=30GB

            apk -u add jq
            PUBLIC_IP=`gcloud compute instances describe weechat-$CIRCLE_BUILD_NUM \
              --format=json | jq -r '.networkInterfaces[0].accessConfigs[0].natIP'`
            echo $PUBLIC_IP > /tmp/public_ip.txt

            curl --silent -X PUT -H "Content-Type: application/json" \
              -H "Authorization: Bearer $CTX_DIGITALOCEAN_TOKEN" -d "{\"data\":\"$PUBLIC_IP\"}" \
              "https://api.digitalocean.com/v2/domains/ackerson.de/records/76354761"

      - run:
          name: Prepare deploy network access
          command: |
            ORIG_RANGE=`gcloud compute firewall-rules describe default-allow-ssh \
              --format=json | jq -r '.sourceRanges | @csv'`
            ORIG_RANGE=`echo ${ORIG_RANGE//\"}`
            echo $ORIG_RANGE > /tmp/orig_range.txt

            export DEPLOY_IP=`curl -s https://icanhazip.com`
            gcloud compute firewall-rules update default-allow-ssh \
              --source-ranges=$ORIG_RANGE,$DEPLOY_IP

      - checkout
      - run:
          name: Prepare Traefik & Weechat config
          command: |
            export PUBLIC_IP=`cat /tmp/public_ip.txt`
            echo "Public IP is: $PUBLIC_IP"
            sleep 10

            chmod 600 traefik/acme.json
            echo $TRAEFIK_ACME_JSON_WEECHAT > traefik/acme.json
            #sed -i -e "s@{{WEECHAT_HOSTNAME}}@$WEECHAT_HOSTNAME@" traefik/traefik.toml
            scp -o StrictHostKeyChecking=no -r traefik core@$PUBLIC_IP:~/

            sed -i -e "s@{{WEECHAT_RELAY_PASSWORD}}@$WEECHAT_RELAY_PASSWORD@" weechat/relay.conf
            sed -i -e "s@{{WEECHAT_CANONICAL_PASSWORD}}@$WEECHAT_CANONICAL_PASSWORD@" weechat/irc.conf
            sed -i -e "s@{{WEECHAT_FREENODE_PASSWORD}}@$WEECHAT_FREENODE_PASSWORD@" weechat/irc.conf
            sed -i -e "s@{{WEECHAT_CANONICAL_ADDRESSES}}@$WEECHAT_CANONICAL_ADDRESSES@" weechat/irc.conf
            sed -i -e "s@{{WEECHAT_CANONICAL_CHANNELS}}@$WEECHAT_CANONICAL_CHANNELS@" weechat/irc.conf

            scp -r weechat core@$PUBLIC_IP:~/
            ssh core@$PUBLIC_IP -- "sudo chown -R 1000:1000 /home/core/weechat"

      - run:
          name: Launch Traefik & Weechat containers
          command: |
            export PUBLIC_IP=`cat /tmp/public_ip.txt`


            ssh core@$PUBLIC_IP TWAH=\`$TRAEFIK_WC_API_HOSTNAME\`
              -- "docker network create web && \
              docker run -d --restart=always --network='web' \
              -e DO_AUTH_TOKEN=$CTX_DIGITALOCEAN_TOKEN \
              -e TRAEFIK_ACCESSLOG=true -e TRAEFIK_LOG=true \
              -e TRAEFIK_ACCESSLOG_FILEPATH=/var/log/traefik/access.log \
              -e TRAEFIK_LOG_FILEPATH=/var/log/traefik/traefik.log \
              -v /var/run/docker.sock:/var/run/docker.sock:ro \
              -v /home/core/traefik/logs:/var/log/traefik/ \
              --label='traefik.http.middlewares.api_auth.basicauth.users=$TRAEFIK_WC_API_BASICAUTH' \
              --label='traefik.http.routers.api.entrypoints=httpsecure' \
              --label='traefik.http.routers.api.middlewares=api_auth' \
              --label='traefik.http.routers.api.rule=Host($TWAH)' \
              --label='traefik.http.routers.api.service=api@internal' \
              --label='traefik.http.routers.api.tls' \
              --label='traefik.tls.stores.default.defaultCertificate' \
              -p 443:443 --name traefik traefik:v2.0 \
              --api --entrypoints.httpsecure.address=:443 \
              --providers.docker --providers.docker.exposedByDefault=true"

            ssh core@$PUBLIC_IP WH=\`$WEECHAT_HOSTNAME\`
              -- "docker run -d --network='web' \
              -e UID=1000 -e GID=1000 -p9001 \
              -v /home/core/weechat:/weechat --restart=always \
              --label='traefik.http.routers.weechat.rule=Host($WH)' \
              --label='traefik.http.routers.weechat.entrypoints=httpsecure' \
              --name weechat danackerson/weechat"

      - run:
          name: Remove deploy network access
          command: |
            export ORIG_RANGE=`cat /tmp/orig_range.txt`
            if [ ! -z "$ORIG_RANGE" ]; then
              gcloud compute firewall-rules update default-allow-ssh \
                --source-ranges=$ORIG_RANGE
            fi
          when: always

workflows:
  build:
    jobs:
        - build:
            context: org-global
