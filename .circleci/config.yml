version: 2.1

jobs:
  build:
    docker:
      - image: google/cloud-sdk:alpine
    working_directory: ~/gke
    steps:
      - add_ssh_keys:
          fingerprints:
            - $CTX_SSH_DEPLOY_FINGERPRINT
      - run:
          name: Store Service Accounts
          command: |
            echo $CTX_GOOGLE_DEPLOY_SERVICE_JSON > ${HOME}/gcloud-service-key.json
            chmod 600 $HOME/gcloud-service-key.json

      - run:
          name: Setup compute instance
          command: |
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${CTX_GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${CTX_GOOGLE_COMPUTE_ZONE}

            gcloud compute instances create weechat-$CIRCLE_BUILD_NUM \
              --image-family=coreos-stable --image-project=coreos-cloud \
              --machine-type=f1-micro --boot-disk-size=30GB

            apk -u add jq
            PUBLIC_IP=`gcloud compute instances describe weechat-$CIRCLE_BUILD_NUM \
              --format=json | jq -r '.networkInterfaces[0].accessConfigs[0].natIP'`
            echo $PUBLIC_IP > /tmp/public_ip.txt

            curl --silent -X PUT -H "Content-Type: application/json" \
              -H "Authorization: Bearer $CTX_DIGITALOCEAN_TOKEN" -d "{\"data\":\"$PUBLIC_IP\"}" \
              "https://api.digitalocean.com/v2/domains/ackerson.de/records/76354761"

      - run:
          name: Prepare deploy network access
          command: |
            ORIG_RANGE=`gcloud compute firewall-rules describe default-allow-ssh \
              --format=json | jq -r '.sourceRanges | @csv'`
            ORIG_RANGE=`echo ${ORIG_RANGE//\"}`
            echo $ORIG_RANGE > /tmp/orig_range.txt

            export DEPLOY_IP=`curl -s https://icanhazip.com`
            gcloud compute firewall-rules update default-allow-ssh \
              --source-ranges=$ORIG_RANGE,$DEPLOY_IP

      - checkout
      - run:
          name: Prepare Traefik & Weechat config & docker-compose binary
          command: |
            export PUBLIC_IP=`cat /tmp/public_ip.txt`
            echo "Public IP is: $PUBLIC_IP"
            sleep 5

            #chmod 600 traefik/acme.json
            #echo $TRAEFIK_ACME_JSON_WEECHAT > traefik/acme.json
            #sed -i -e "s@{{WEECHAT_HOSTNAME}}@$WEECHAT_HOSTNAME@" traefik/traefik.toml
            #scp -o StrictHostKeyChecking=no -r traefik core@$PUBLIC_IP:~/

            sed -i -e "s@{{WEECHAT_RELAY_PASSWORD}}@$WEECHAT_RELAY_PASSWORD@" weechat/relay.conf
            sed -i -e "s@{{WEECHAT_CANONICAL_PASSWORD}}@$WEECHAT_CANONICAL_PASSWORD@" weechat/irc.conf
            sed -i -e "s@{{WEECHAT_FREENODE_PASSWORD}}@$WEECHAT_FREENODE_PASSWORD@" weechat/irc.conf
            sed -i -e "s@{{WEECHAT_CANONICAL_ADDRESSES}}@$WEECHAT_CANONICAL_ADDRESSES@" weechat/irc.conf
            sed -i -e "s@{{WEECHAT_CANONICAL_CHANNELS}}@$WEECHAT_CANONICAL_CHANNELS@" weechat/irc.conf

            scp -o StrictHostKeyChecking=no -r weechat core@$PUBLIC_IP:~/
            ssh core@$PUBLIC_IP -- "sudo chown -R 1000:1000 /home/core/weechat &&
              export DOCKER_COMPOSE_VERSION=`git ls-remote --tags git://github.com/docker/compose.git | awk '{print $2}' |grep -v 'docs\|rc' |awk -F'/' '{print $3}' |sort -V |tail -n1` &&
              sudo mkdir -p /opt/bin && sudo chown core /opt/bin &&
              curl -L https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-`uname -s`-`uname -m` > /opt/bin/docker-compose &&
              chmod u+x /opt/bin/docker-compose"

      - run:
          name: Launch Traefik & Weechat containers
          command: |
            export PUBLIC_IP=`cat /tmp/public_ip.txt`

            sed -i -e "s@{{TRAEFIK_WC_API_HOSTNAME}}@$TRAEFIK_WC_API_HOSTNAME@" docker-compose.yml
            sed -i -e "s@{{CTX_DIGITALOCEAN_TOKEN}}@$CTX_DIGITALOCEAN_TOKEN@" docker-compose.yml
            sed -i -e "s@{{WEECHAT_HOSTNAME}}@$WEECHAT_HOSTNAME@" docker-compose.yml
            sed -i -e "s@{{TRAEFIK_WC_API_BASICAUTH}}@$TRAEFIK_WC_API_BASICAUTH@" docker-compose.yml

            scp docker-compose.yml core@$PUBLIC_IP:~/

            ssh core@$PUBLIC_IP -- "docker network create web && /opt/bin/docker-compose up -d"
            # NOTE: if the docker-compose fails, try sudo reboot (and then just docker-compose up -d w/o sudo!)
      - run:
          name: Remove deploy network access
          command: |
            export ORIG_RANGE=`cat /tmp/orig_range.txt`
            if [ ! -z "$ORIG_RANGE" ]; then
              gcloud compute firewall-rules update default-allow-ssh \
                --source-ranges=$ORIG_RANGE
            fi
          when: always

workflows:
  build:
    jobs:
        - build:
            context: org-global
