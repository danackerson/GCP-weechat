version: 2.1

jobs:
  build:
    docker:
      - image: google/cloud-sdk:alpine
    working_directory: ~/gke
    steps:
      - add_ssh_keys:
          fingerprints:
            - $CTX_SSH_DEPLOY_FINGERPRINT
      - run:
          name: Store Service Accounts
          command: |
            echo $CTX_GOOGLE_DEPLOY_SERVICE_JSON > ${HOME}/gcloud-service-key.json
            chmod 600 $HOME/gcloud-service-key.json

      - run:
          name: Setup compute instance
          command: |
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${CTX_GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${CTX_GOOGLE_COMPUTE_ZONE}

            gcloud compute instances create weechat-$CIRCLE_BUILD_NUM \
              --image-family=coreos-stable --image-project=coreos-cloud \
              --machine-type=f1-micro --boot-disk-size=30GB

            apk -u add jq
            PUBLIC_IP=`gcloud compute instances describe weechat-$CIRCLE_BUILD_NUM \
              --format=json | jq -r '.networkInterfaces[0].accessConfigs[0].natIP'`
            echo $PUBLIC_IP > /tmp/public_ip.txt

      - run:
          name: Prepare deploy network access
          command: |
            ORIG_RANGE=`gcloud compute firewall-rules describe default-allow-ssh \
              --format=json | jq -r '.sourceRanges | @csv'`
            ORIG_RANGE=`echo ${ORIG_RANGE//\"}`
            echo $ORIG_RANGE > /tmp/orig_range.txt

            export DEPLOY_IP=`curl -s https://icanhazip.com`
            gcloud compute firewall-rules update default-allow-ssh \
              --source-ranges=$ORIG_RANGE,$DEPLOY_IP

      - checkout
      - run:
          name: Prepare Traefik & Weechat config
          command: |
            export PUBLIC_IP=`cat /tmp/public_ip.txt`
            echo "Public IP is: $PUBLIC_IP"
            sleep 5
            scp -o StrictHostKeyChecking=no -r traefik core@$PUBLIC_IP:~/

            sed -i -e "s@{{WEECHAT_RELAY_PASSWORD}}@$WEECHAT_RELAY_PASSWORD@" weechat/relay.conf
            sed -i -e "s@{{WEECHAT_SEC_CANONICAL_PASSWORD}}@$WEECHAT_SEC_CANONICAL_PASSWORD@" weechat/sec.conf
            sed -i -e "s@{{WEECHAT_SEC_FREENODE_PASSWORD}}@$WEECHAT_SEC_FREENODE_PASSWORD@" weechat/sec.conf
            sed -i -e "s@{{WEECHAT_CANONICAL_ADDRESSES}}@$WEECHAT_CANONICAL_ADDRESSES@" weechat/irc.conf
            sed -i -e "s@{{WEECHAT_CANONICAL_CHANNELS}}@$WEECHAT_CANONICAL_CHANNELS@" weechat/irc.conf

            scp -r weechat core@$PUBLIC_IP:~/
            scp Dockerfile core@$PUBLIC_IP:~/
            ssh core@$PUBLIC_IP -- "docker build . -t weechat"

      - run:
          name: Launch Traefik & Weechat containers
          command: |
            export PUBLIC_IP=`cat /tmp/public_ip.txt`
            ssh core@$PUBLIC_IP -- "docker network create web && \
            docker run -d --restart=always --network='web' \
              -e DO_AUTH_TOKEN=$CTX_DIGITALOCEAN_TOKEN \
              -v /var/run/docker.sock:/var/run/docker.sock \
              -v ~/traefik/traefik.toml:/traefik.toml \
              -v ~/traefik/logs:/var/log/traefik/ \
              -v ~/traefik/acme.json:/acme.json \
              -p 443:443 --name traefik traefik:1.7"

            ssh core@$PUBLIC_IP -- "docker run -d --network='web' \
              -e UID=1000 -e GID=1000 -p9001:9001 \
              -v ~/weechat:~/.weechat --restart=always \
              --label='traefik.frontend.rule=Host:{WEECHAT_HOSTNAME}' \
              --label='traefik.frontend.passHostHeader=true' \
              --label='traefik.enable=true' \
              --label='traefik.docker.network=web' \
              --label='traefik.port=${WEECHAT_RELAY_PORT}' \
              --label='traefik.backend=weechat' \
              --name weechat weechat"

            #TODO: update DigitalOcean DNS of {WEECHAT_HOSTNAME}

      - run:
          name: Remove deploy network access
          command: |
            export ORIG_RANGE=`cat /tmp/orig_range.txt`
            if [ ! -z "$ORIG_RANGE" ]; then
              gcloud compute firewall-rules update default-allow-ssh \
                --source-ranges=$ORIG_RANGE
            fi
          when: always

workflows:
  build:
    jobs:
        - build:
            context: org-global
